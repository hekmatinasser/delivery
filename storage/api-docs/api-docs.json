{
    "openapi": "3.0.0",
    "info": {
        "title": "Snapp API",
        "version": "1.0"
    },
    "paths": {
        "/api": {},
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user and sends a verification code via SMS",
                "operationId": "4f180d96579be230948368a8ef1bab66",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "is_new": {
                                                    "type": "bolean",
                                                    "example": "true"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication code sent to your mobile."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Complete user registration",
                "description": "Complete user registration with activation code",
                "operationId": "eaabe2331d6853f1538efbe76edd7ef8",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "hash-value"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "family": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Completed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Login user with mobile number",
                "operationId": "777e65b246a8910073b45de4f1d18782",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication code sent to your mobile."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login/code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with activation code and mobile number",
                "description": "Logs in a user with an activation code and mobile number",
                "operationId": "51ae64416aad5c2719156fd5f697e3db",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginWithCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "hash-value"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "family": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login/password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with mobile number and password",
                "description": "Logs in a user with a mobile number and password",
                "operationId": "ec1ac7a4616b1c0116598eb75987f773",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginWithPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "hash-value"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "family": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized login response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorised."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send verification code to reset password",
                "description": "Sends a verification code to the user's mobile number to reset their password",
                "operationId": "069ac36dab250c365f39d64399ba4d61",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code has been sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user's password",
                "description": "Resets the user's password using the verification code sent to their mobile number",
                "operationId": "16200b77b3fc69127ea91efd4f81a8e1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "password is updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorValidation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/store": {
            "put": {
                "tags": [
                    "Store"
                ],
                "summary": "Update a store",
                "operationId": "4e863ed58fe7f45632abc471ddfff471",
                "requestBody": {
                    "description": "Store data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Store"
                ],
                "summary": "Create a new store",
                "description": "Creates a new store for the authenticated user.",
                "operationId": "createStore",
                "requestBody": {
                    "description": "Store data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Store already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Store"
                ],
                "summary": "Delete the user's store",
                "description": "Deletes the store associated with the authenticated user.",
                "operationId": "deleteStore",
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/store/my": {
            "get": {
                "tags": [
                    "Store"
                ],
                "summary": "Get user's store details",
                "description": "Returns the details of the store associated with the authenticated user",
                "operationId": "1bea017187973c6b88a7f2fe115ada86",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/store/areaTypes": {
            "get": {
                "tags": [
                    "Store"
                ],
                "summary": "Get area types",
                "description": "Returns a list of store area types",
                "operationId": "a93b4f216b6c0eb8df92db145f486071",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "rent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/store/categories": {
            "get": {
                "tags": [
                    "Store"
                ],
                "summary": "Get store categories",
                "description": "Returns a list of store category",
                "operationId": "f9b2c932484118d27b594c387cb04207",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "description": "Returns the authenticated user's profile information",
                "operationId": "15119e7ff16d411ed7969cc14573885f",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "054b3b41d9cdb41f6425339997f1ee10",
                "requestBody": {
                    "description": "The user's profile information to update",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 70
                                    },
                                    "family": {
                                        "type": "string",
                                        "maxLength": 70
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "format": "mobile",
                                        "example": "09123456789"
                                    },
                                    "nationalCode": {
                                        "type": "string",
                                        "format": "nationalCode",
                                        "example": "0123456789"
                                    },
                                    "nationalPhoto": {
                                        "description": "The user's national photo image file (JPEG or PNG format, max size 15MB, min dimensions 100x100, max dimensions 1000x1000).",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "postCode": {
                                        "type": "string",
                                        "format": "postCode",
                                        "example": "1234567890"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "phone",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated user profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The user profile was successfully updated and is awaiting admin approval."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/vehicle": {
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "update a new vehicle",
                "description": "update vehicle record",
                "operationId": "01c90cd07392e89001ffc53fa92d813c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Store a new vehicle",
                "description": "Create a new vehicle record",
                "operationId": "24896df2f902c580f204053ef1b9b7c9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Vehicle already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Delete the user's vehicle",
                "description": "Deletes the vehicle associated with the authenticated user.",
                "operationId": "deleteVehicle",
                "responses": {
                    "200": {
                        "description": "Vehicle deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/my": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get user's vehicle details",
                "description": "Returns the details of the vehicle associated with the authenticated user",
                "operationId": "78c93a727f393a9bcf07aa640c3452e0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/types": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle types",
                "description": "Returns a list of vehicle types",
                "operationId": "ed308ca1a61e35125f41b4108bca4cc0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "motor"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Schema for a successful API response",
                "properties": {
                    "success": {
                        "description": "Indicates if the request was successful",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "description": "Response data",
                        "type": "object",
                        "example": []
                    },
                    "message": {
                        "description": "Response message",
                        "type": "string",
                        "example": "Success"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Schema for an error API response",
                "properties": {
                    "success": {
                        "description": "Indicates if the request was successful",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Error"
                    }
                },
                "type": "object"
            },
            "ErrorValidation": {
                "title": "Error Validation",
                "description": "Schema for an error Validation API response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Error"
                    },
                    "errors": {
                        "description": "Error data",
                        "properties": {
                            "fieldName": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": [
                                        "field is wrong."
                                    ]
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "title": "Forgot Password Request",
                "description": "Pass user's mobile number",
                "properties": {
                    "mobile": {
                        "type": "string",
                        "format": "mobile",
                        "example": "09123456789"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Pass user mobile number",
                "required": [
                    "mobile"
                ],
                "properties": {
                    "mobile": {
                        "type": "string",
                        "example": "09123456789"
                    }
                },
                "type": "object"
            },
            "LoginWithCodeRequest": {
                "title": "Login With Code Request",
                "description": "Pass user activation code and mobile number",
                "properties": {
                    "code": {
                        "type": "string",
                        "format": "code",
                        "example": "1234"
                    },
                    "mobile": {
                        "type": "string",
                        "format": "mobile",
                        "example": "09123456789"
                    }
                },
                "type": "object"
            },
            "LoginWithPasswordRequest": {
                "title": "Login With PasswordRequest",
                "description": "Pass user mobile number and password",
                "properties": {
                    "mobile": {
                        "type": "string",
                        "format": "mobile",
                        "example": "09123456789"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "MyNewPassword123"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register Request",
                "description": "Schema for the registration request",
                "required": [
                    "mobile"
                ],
                "properties": {
                    "mobile": {
                        "description": "User's mobile number",
                        "type": "string",
                        "example": "09123456789"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "title": "Reset Password Request",
                "description": "Pass verification code and new password",
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "1234"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword"
                    }
                },
                "type": "object"
            },
            "VerifyRequest": {
                "title": "Compleate RegistrationRequest Request",
                "description": "Pass user mobile number and activation code",
                "required": [
                    "mobile",
                    "code",
                    "password"
                ],
                "properties": {
                    "mobile": {
                        "type": "string",
                        "example": "09123456789"
                    },
                    "code": {
                        "type": "string",
                        "example": "1234"
                    },
                    "password": {
                        "type": "string",
                        "example": "MyNewPassword123"
                    }
                },
                "type": "object"
            },
            "StoreStoreRequest": {
                "title": "StoreStoreRequest",
                "description": "Store Store Request Body",
                "required": [
                    "category_id",
                    "areaType",
                    "name",
                    "address",
                    "postCode",
                    "phone",
                    "lat",
                    "lang"
                ],
                "properties": {
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "areaType": {
                        "description": "Area Type",
                        "type": "string",
                        "enum": [
                            "RENT",
                            "OWNERSHIP"
                        ],
                        "example": "RENT"
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "postCode": {
                        "description": "Post Code",
                        "type": "integer",
                        "example": "1234567890"
                    },
                    "phone": {
                        "description": "Phone",
                        "type": "integer",
                        "example": "1234567890"
                    },
                    "lat": {
                        "description": "Latitude",
                        "type": "number",
                        "format": "desimal",
                        "example": "40.7128"
                    },
                    "lang": {
                        "description": "Longitude",
                        "type": "number",
                        "format": "desimal",
                        "example": "-74.0060"
                    }
                },
                "type": "object"
            },
            "UpdateStoreRequest": {
                "title": "UpdateStoreRequest",
                "description": "Updtae Store Request Body",
                "required": [
                    "category_id",
                    "areaType",
                    "name",
                    "address",
                    "postCode",
                    "phone",
                    "lat",
                    "lang"
                ],
                "properties": {
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "areaType": {
                        "description": "Area Type",
                        "type": "string",
                        "enum": [
                            "RENT",
                            "PEROPERTY"
                        ],
                        "example": "RENT"
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "postCode": {
                        "description": "Post Code",
                        "type": "integer",
                        "example": "1234567890"
                    },
                    "phone": {
                        "description": "Phone",
                        "type": "integer",
                        "example": "1234567890"
                    },
                    "lat": {
                        "description": "Latitude",
                        "type": "number",
                        "format": "desimal",
                        "example": "40.7128"
                    },
                    "lang": {
                        "description": "Longitude",
                        "type": "number",
                        "format": "desimal",
                        "example": "-74.0060"
                    }
                },
                "type": "object"
            },
            "UpdateProfileRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 70
                    },
                    "family": {
                        "type": "string",
                        "maxLength": 70
                    },
                    "mobile": {
                        "type": "string",
                        "format": "mobile",
                        "example": "09123456789"
                    },
                    "nationalCode": {
                        "type": "string",
                        "format": "nationalCode",
                        "example": "0123456789"
                    },
                    "nationalPhoto": {
                        "description": "The user's national photo image file (JPEG or PNG format, max size 15MB, min dimensions 100x100.",
                        "type": "string",
                        "format": "binary"
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "postCode": {
                        "type": "string",
                        "format": "postCode",
                        "example": "1234567890"
                    },
                    "phone": {
                        "type": "string",
                        "format": "phone",
                        "example": "1234567890"
                    }
                },
                "type": "object"
            },
            "StoreVehicleRequest": {
                "title": "Store Vehicle Request",
                "description": "Request body for storing a new vehicle",
                "required": [
                    "type",
                    "brand",
                    "pelak",
                    "color",
                    "model"
                ],
                "properties": {
                    "type": {
                        "description": "The type of the vehicle (MOTOR or CAR)",
                        "type": "string",
                        "enum": [
                            "MOTOR",
                            "CAR"
                        ]
                    },
                    "brand": {
                        "description": "The brand of the vehicle",
                        "type": "string",
                        "maxLength": 150
                    },
                    "pelak": {
                        "description": "The pelak of the vehicle",
                        "type": "string",
                        "maxLength": 50
                    },
                    "color": {
                        "description": "The color of the vehicle",
                        "type": "string",
                        "maxLength": 50
                    },
                    "model": {
                        "description": "The model of the vehicle",
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "type": "object"
            },
            "UpdateVehicleRequest": {
                "title": "update Vehicle Request",
                "description": "Request body for updateting a vehicle",
                "required": [
                    "type",
                    "brand",
                    "pelak",
                    "color",
                    "model"
                ],
                "properties": {
                    "type": {
                        "description": "The type of the vehicle (MOTOR or CAR)",
                        "type": "string",
                        "enum": [
                            "MOTOR",
                            "CAR"
                        ]
                    },
                    "brand": {
                        "description": "The brand of the vehicle",
                        "type": "string",
                        "maxLength": 255
                    },
                    "pelak": {
                        "description": "The pelak of the vehicle",
                        "type": "string",
                        "maxLength": 255
                    },
                    "color": {
                        "description": "The color of the vehicle",
                        "type": "string",
                        "maxLength": 255
                    },
                    "model": {
                        "description": "The model of the vehicle",
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "CoinWallet": {
                "title": "CoinWallet",
                "description": "A Coin Wallet object",
                "required": [
                    "user_id",
                    "coins"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "coins": {
                        "type": "number",
                        "format": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Store": {
                "title": "store",
                "description": "Store model",
                "properties": {
                    "id": {
                        "description": "ID of the store",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the user who owns the store",
                        "type": "integer",
                        "format": "int64"
                    },
                    "category_id": {
                        "description": "ID of the category",
                        "type": "integer",
                        "format": "int64"
                    },
                    "category": {
                        "description": "The store's category",
                        "type": "string"
                    },
                    "name": {
                        "description": "The store's name",
                        "type": "string"
                    },
                    "postCode": {
                        "description": "The store's postal code",
                        "type": "string"
                    },
                    "address": {
                        "description": "The store's address",
                        "type": "string"
                    },
                    "areaType": {
                        "description": "area type of the store",
                        "type": "string",
                        "enum": [
                            "RENT",
                            "PROPERTY"
                        ]
                    },
                    "phone": {
                        "description": "The store's phone number",
                        "type": "string"
                    },
                    "lat": {
                        "description": "The store's Latitude",
                        "type": "number",
                        "format": "float"
                    },
                    "lang": {
                        "description": "The store's Longitude",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "A user object",
                "properties": {
                    "id": {
                        "description": "The user's ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "family": {
                        "description": "The user's family name",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "The user's mobile number",
                        "type": "string"
                    },
                    "nationalCode": {
                        "description": "The user's national code",
                        "type": "string"
                    },
                    "nationalPhoto": {
                        "description": "The user's national photo",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email address",
                        "type": "string"
                    },
                    "status": {
                        "description": "The user's status",
                        "type": "integer"
                    },
                    "unValidCodeCount": {
                        "description": "The user's unvalidated code count",
                        "type": "integer"
                    },
                    "address": {
                        "description": "The user's address",
                        "type": "string"
                    },
                    "postCode": {
                        "description": "The user's postal code",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The user's phone number",
                        "type": "string"
                    },
                    "userType": {
                        "description": "The user's type (0 => seller or 1 => delivery)",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The date/time the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "The date/time the user was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "wallet": {
                        "$ref": "#/components/schemas/Wallet"
                    },
                    "coinWallet": {
                        "$ref": "#/components/schemas/CoinWallet"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/Vehicle"
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "title": "Vehicle",
                "description": "Vehicle model",
                "properties": {
                    "id": {
                        "description": "ID of the vehicle",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the user who owns the vehicle",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "description": "Type of the vehicle",
                        "type": "string",
                        "enum": [
                            "MOTOR",
                            "CAR"
                        ]
                    },
                    "brand": {
                        "description": "Brand of the vehicle",
                        "type": "string"
                    },
                    "pelak": {
                        "description": "License plate number of the vehicle",
                        "type": "string"
                    },
                    "color": {
                        "description": "Color of the vehicle",
                        "type": "string"
                    },
                    "model": {
                        "description": "Model of the vehicle",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Wallet": {
                "required": [
                    "user_id",
                    "amount"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "number",
                        "format": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token",
                "name": "Token",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}